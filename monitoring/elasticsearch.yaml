apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      name: elasticsearch
      labels:
        app: elasticsearch
    spec:
      nodeName: lip6-lab.ple-1.edge-net.io
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data/"]
        volumeMounts:
        - name: es-storage
          mountPath: /usr/share/elasticsearch/data/
      containers:
      - name: elasticsearch
        image: elasticsearch:7.9.3
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: "/tls"
            name: tls
          - name: es-storage
            mountPath: /usr/share/elasticsearch/data/
        env:
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "true"
          - name: ELASTIC_USERNAME
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: password
        ports:
        - containerPort: 9200
        - containerPort: 9300
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
      restartPolicy: Always
      volumes:
      - name: es-storage
        hostPath:
          path: /mnt/cachecash/data/elasticsearch
      - name: tls
        csi:
          driver: csi.cert-manager.io
          volumeAttributes:
                csi.cert-manager.io/issuer-name: ca-issuer-cachecash
                csi.cert-manager.io/dns-names: elasticsearch.default.svc.cluster.local,elasticsearch
                csi.cert-manager.io/certificate-file: server-cert.pem
                csi.cert-manager.io/privatekey-file: server-key.pem
                csi.cert-manager.io/common-name: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      name: kibana
      labels:
        app: kibana
    spec:
      nodeName: lip6-lab.ple-1.edge-net.io
      initContainers:
      - name: init-elasticsearch
        image: curlimages/curl:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
          - 'curl --user $(INITIAL_USERNAME):$(INITIAL_PASSWORD) -X POST "elasticsearch:9200/_security/user/$(ELASTICSEARCH_USERNAME)/_password?pretty" -H "Content-Type: application/json" -d" { \"password\": \"$(ELASTICSEARCH_PASSWORD)\" }"'
        env:
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: kibana
                key: username
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kibana
                key: password
          - name: INITIAL_USERNAME
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: username
          - name: INITIAL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch
                key: password
      containers:
      - name: kibana
        image: kibana:7.9.3
        volumeMounts:
          - mountPath: "/tls"
            name: tls
        env:
          - name: xpack.security.enabled
            value: "true"
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: kibana
                key: username
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kibana
                key: password
          - name: ELASTICSEARCH_HOSTS
            value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
      restartPolicy: Always
      volumes:
      - name: tls
        csi:
          driver: csi.cert-manager.io
          volumeAttributes:
                csi.cert-manager.io/issuer-name: ca-issuer-cachecash
                csi.cert-manager.io/dns-names: kibana.default.svc.cluster.local,kibana
                csi.cert-manager.io/certificate-file: server-cert.pem
                csi.cert-manager.io/privatekey-file: server-key.pem
                csi.cert-manager.io/common-name: kibana
